{"version":3,"sources":["components/layout/Header.js","components/Spinner.js","apis/favqs-api.js","apis/firebase.js","actions/index.js","actions/types.js","components/QODComponent.js","components/QuotesComponent.js","components/FavoriteQuotesComponent.js","components/App.js","reducers/index.jsx","reducers/quouts.js","reducers/qotd.js","reducers/createquout.js","reducers/fetchfirebases.js","index.js"],"names":["Header","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","SpinnerComponent","props","role","message","defaultProps","axios","create","baseURL","headers","Authorization","fireDB","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","createQuote","formValues","dispatch","a","firebaseDb","child","push","response","payload","data","QODComponent","addQuotesAsFavorite","params","console","log","qotd","getTheQuoteOfTheDay","fetchQotd","this","aria-hidden","body","author","Spinner","renderContent","onClick","Component","mapDispatchToProps","favqsApi","get","connect","state","quote","QuotesComponent","search","onFormSubmit","event","preventDefault","resetForm","setState","fetchQuotes","quouts","quout","onSubmit","value","placeholder","onChange","e","target","map","key","class","quotes","FavoriteQuotesComponent","fetchFirebase","on","then","snapshot","val","favoritequotes","App","Fragment","path","exact","component","combineReducers","action","createquout","store","createStore","rootReducer","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.aa6c027c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link   className=\"nav-link\" to=\"/\">\r\n              QOD\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link  className=\"nav-link\" to=\"/quotes\">\r\n              Quotes\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/favorite-quotes\">\r\n              Favorite Quotes\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst SpinnerComponent = (props) => {\r\n  return (\r\n    <div className=\"spinner-border text-success\" role=\"status\">\r\n      <span className=\"sr-only\">{props.message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinnerComponent.defaultProps = {\r\n  message: \"Loading...\",\r\n};\r\n\r\nexport default SpinnerComponent;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://favqs.com\",\r\n  headers: {\r\n    Authorization: 'Token token=\"fb86580b27753e9853fd9db872b0e59b\"',\r\n  },\r\n});\r\n","import * as firebase from \"firebase\";\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBZ6NowNAUFa9n1pK8Nujayzf7yOsd9nRw\",\r\n    authDomain: \"quote-browser-manager.firebaseapp.com\",\r\n    databaseURL: \"https://quote-browser-manager.firebaseio.com\",\r\n    projectId: \"quote-browser-manager\",\r\n    storageBucket: \"quote-browser-manager.appspot.com\",\r\n    messagingSenderId: \"574253905417\",\r\n    appId: \"1:574253905417:web:a1e41dd14875d0c085ead8\",\r\n    measurementId: \"G-VMP9V6YGSX\"\r\n  };\r\n  // Initialize Firebase\r\n const fireDB =  firebase.initializeApp(firebaseConfig);\r\n\r\n export default fireDB.database().ref();","import favqsApi from \"../apis/favqs-api\";\r\n\r\nimport firebaseDb from \"../apis/firebase\";\r\n\r\nimport {\r\n  FETCH_QUOTE,\r\n  FETCH_QUOTES,\r\n  CREATE_QUOTE,\r\n  FETCH_FIREBASE,\r\n} from \"./types\";\r\n\r\nexport const createQuote = (formValues) => async (dispatch) => {\r\n  const response = await firebaseDb.child(\"favorite_quotes\").push(formValues);\r\n\r\n  dispatch({ type: CREATE_QUOTE, payload: response.data });\r\n};\r\n\r\n// export const fetchFirebase = () => async (dispatch) => {\r\n//   const response = await firebaseDb.child('favorite_quotes').on('value', snapshot =>  snapshot.val());\r\n\r\n//   dispatch({ type: FETCH_FIREBASE, payload: response.data });\r\n\r\n// };\r\nexport const fetchFirebase = () => async (dispatch) => {\r\n  return (dispatch) => {\r\n    firebaseDb\r\n      .child(\"favorite_quotes\")\r\n      .on(\"value\")\r\n      .then((snapshot) =>\r\n        dispatch({ type: FETCH_FIREBASE, payload: snapshot.val() })\r\n      );\r\n  };\r\n};\r\n\r\nexport const fetchQuotes = () => async (dispatch) => {\r\n  const response = await favqsApi.get(\"/api/quotes/\");\r\n  dispatch({\r\n    type: FETCH_QUOTES,\r\n    payload: response.data.quotes,\r\n  });\r\n};\r\n\r\nexport const fetchQotd = () => async (dispatch) => {\r\n  const response = await favqsApi.get(`/api/qotd`);\r\n\r\n  dispatch({\r\n    type: FETCH_QUOTE,\r\n    payload: response.data,\r\n  });\r\n};\r\n","\r\nexport const CREATE_QUOTE = 'CREATE_QUOTE';\r\nexport const FETCH_QUOTES = 'FETCH_QUOTES';\r\nexport const FETCH_QUOTE = 'FETCH_QUOTE';\r\nexport const DELETE_STREAM = 'DELETE_STREAM';\r\nexport const FETCH_FIREBASE = 'FETCH_FIREBASE';","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SpinnerComponent from \"./Spinner\";\r\nimport { fetchQotd, createQuote } from \"../actions\";\r\n\r\nclass QODComponent extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchQotd();\r\n    console.log(this.props.qotd);\r\n  }\r\n\r\n  renderContent() {\r\n    if (this.props.qotd)\r\n      return (\r\n        <blockquote className=\"blockquote mb-0\">\r\n          <p>\r\n          <i className=\"fa fa-quote-left text-info mr-4\" aria-hidden=\"true\"></i>\r\n            {this.props.qotd.body}\r\n            <i className=\"fa fa-quote-right text-info ml-4\" aria-hidden=\"true\"></i>\r\n            </p>\r\n          <footer className=\"blockquote-footer mb-4\">\r\n            {this.props.qotd.author}\r\n          </footer>\r\n        </blockquote>\r\n      );\r\n\r\n    return <SpinnerComponent message=\"Please accept qotd request\" />;\r\n  }\r\n\r\n  addQuotesAsFavorite = (params) => {\r\n    console.log(this.props.qotd);\r\n    this.props.createQuote(this.props.qotd);\r\n  };\r\n\r\n  getTheQuoteOfTheDay = () => {\r\n    console.log(\"refress\")\r\n    this.props.fetchQotd();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          {this.renderContent()}\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.addQuotesAsFavorite}\r\n            className=\"btn btn-danger rounded-circle\"\r\n          >\r\n            <i className=\"fa fa-heart\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <button\r\n            onClick={this.getTheQuoteOfTheDay}\r\n            type=\"button\"\r\n            className=\"btn btn-danger rounded-circle ml-3\"\r\n          >\r\n            <i className=\"fa fa-refresh\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  qotd: state.qotd.quote,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchQotd,\r\n  createQuote\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QODComponent);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SpinnerComponent from \"./Spinner\";\r\nimport { fetchQuotes, createQuote } from \"../actions\";\r\n\r\nclass QuotesComponent extends Component {\r\n  state = {\r\n    search: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuotes();\r\n    console.log(this.props.quouts);\r\n  }\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state.search);\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ search: \"\" });\r\n  };\r\n\r\n  addQuotesAsFavorite (quout) {\r\n    console.log(quout);\r\n    this.props.createQuote(quout);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"mb-4\" onSubmit={this.onFormSubmit}>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.search}\r\n              placeholder=\"Quote Text Filter \"\r\n              onChange={(e) => this.setState({ search: e.target.value })}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                onClick={this.resetForm}\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"submit\"\r\n                id=\"button-addon2\"\r\n              >\r\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        {this.props.quouts.map((quout) => {\r\n          return (\r\n            <div key={quout.id} class=\"card mb-3\">\r\n              <div class=\"card-body\">\r\n                <blockquote class=\"blockquote mb-0\">\r\n                  <p>{quout.body}</p>\r\n                  <footer class=\"blockquote-footer\">\r\n                    {quout.author}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={ () => this.addQuotesAsFavorite(quout)}\r\n                      className=\"btn btn-danger rounded-circle ml-4\"\r\n                    >\r\n                      <i className=\"fa fa-heart\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                  </footer>\r\n                </blockquote>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quouts: state.quouts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchQuotes,\r\n  createQuote,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuotesComponent);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SpinnerComponent from \"./Spinner\";\r\nimport { fetchFirebase } from \"../actions\";\r\n\r\nclass FavoriteQuotesComponent extends Component {\r\n \r\n\r\n  componentDidMount() {\r\n    this.props.fetchFirebase();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <blockquote className=\"blockquote mb-0\">\r\n              <p>dfdf</p>\r\n              <footer className=\"blockquote-footer\">\r\n                dddd\r\n                <button\r\n                  type=\"button\"\r\n                  // onClick={this.addQuotesAsFavorite(quout)}\r\n                  className=\"btn btn-danger rounded-circle\"\r\n                >\r\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </footer>\r\n            </blockquote>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  favoritequotes: state.favoritequotes,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchFirebase,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FavoriteQuotesComponent);\r\n","// Using ES6 modules\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./layout/Header\";\r\n\r\nimport QODComponent from \"./QODComponent\";\r\nimport QuotesComponent from \"./QuotesComponent\";\r\nimport FavoriteQuotesComponent from \"./FavoriteQuotesComponent\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Router>\r\n        <React.Fragment>\r\n          <Header />\r\n          {/* A <Switch> looks through its children <Route>s and\r\n        renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/\" exact={true} component={QODComponent} />\r\n            <Route path=\"/quotes\" exact component={QuotesComponent} />\r\n            <Route\r\n              path=\"/favorite-quotes\"\r\n              exact\r\n              component={FavoriteQuotesComponent}\r\n            />\r\n          </Switch>\r\n        </React.Fragment>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport quoutsReducer from \"./quouts\";\r\nimport qotdReducer from \"./qotd\";\r\nimport createquoutReducer from \"./createquout\";\r\nimport fetchfirebasesReducer from \"./fetchfirebases\";\r\n\r\n\r\nexport default combineReducers({\r\n  quouts: quoutsReducer,\r\n  qotd: qotdReducer,\r\n  createquout: createquoutReducer,\r\n  favoritequotes: fetchfirebasesReducer\r\n});\r\n","import { \r\n  FETCH_QUOTES, \r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_QUOTES:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};","import { FETCH_QUOTE} from \"../actions/types\";\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_QUOTE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import _ from \"lodash\";\r\nimport { CREATE_QUOTE } from \"../actions/types\";\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_QUOTE:\r\n      return { ...state, [action.payload]: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { \r\n  FETCH_FIREBASE, \r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_FIREBASE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport { getFirebase } from 'react-redux-firebase'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './scss/variable.scss';\r\nimport './scss/style.scss'\r\n\r\nimport App from './components/App';\r\nimport rootReducer from './reducers';\r\n\r\n\r\n// Note: this API requires redux@>=3.1.0\r\nconst store = createStore(rootReducer, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}